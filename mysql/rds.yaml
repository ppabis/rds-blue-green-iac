---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'RDS MySQL 8.0 Database with managed password and security group'

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID where the RDS instance will be deployed
  
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of subnet IDs where the RDS instance will be deployed
  
  VpcCidr:
    Type: String
    Description: VPC CIDR block for security group access
    Default: '10.0.0.0/16'
    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$'
    ConstraintDescription: Must be a valid CIDR block

Resources:
  # Security Group for RDS
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for RDS MySQL database
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: !Ref VpcCidr
          Description: MySQL access from VPC CIDR
      Tags:
        - Key: Name
          Value: !Sub 'mysql-database-sg'

  # RDS Instance
  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: mysql-database
      DBName: my_database
      Engine: mysql
      EngineVersion: '8.0.33'
      DBInstanceClass: db.t4g.medium
      AllocatedStorage: 20
      StorageType: gp3
      StorageEncrypted: true
      MultiAZ: false
      PubliclyAccessible: false
      MasterUsername: root
      VpcSecurityGroupIds:
        - !Ref RDSSecurityGroup
      DBSubnetGroupName: !Ref RDSSubnetGroup
      ManageMasterUserPassword: true
      BackupRetentionPeriod: 7
      DeletionProtection: false
      AutoMinorVersionUpgrade: true

  # Subnet Group for RDS
  RDSSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS MySQL database
      SubnetIds: !Ref SubnetIds
      Tags:
        - Key: Name
          Value: !Sub 'mysql-database-subnet-group'

Outputs:
  DBInstanceIdentifier:
    Description: RDS Instance Identifier
    Value: !Ref RDSInstance
    Export:
      Name: !Sub '${AWS::StackName}-DBInstanceIdentifier'

  DBEndpoint:
    Description: RDS Instance Endpoint
    Value: !GetAtt RDSInstance.Endpoint.Address
    Export:
      Name: !Sub '${AWS::StackName}-DBEndpoint'

  DBPort:
    Description: RDS Instance Port
    Value: !GetAtt RDSInstance.Endpoint.Port
    Export:
      Name: !Sub '${AWS::StackName}-DBPort'

  SecurityGroupId:
    Description: Security Group ID for RDS
    Value: !Ref RDSSecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-SecurityGroupId'

  MasterUserSecretArn:
    Description: ARN of the master user secret in Secrets Manager
    Value: !GetAtt RDSInstance.MasterUserSecret.SecretArn
    Export:
      Name: !Sub '${AWS::StackName}-MasterUserSecretArn'
